plugins {
	// code
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'java'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id "com.cinnober.gradle.semver-git" version "2.4.0"
    id 'com.github.ben-manes.versions' version '0.28.0' // find new versions of dependency task: dependencyUpdates

    // IDEs
    id "eclipse"
    id "idea"
    
    // publishing
    id "maven"
    id "maven-publish"
	
}

apply plugin: 'io.spring.dependency-management'

ext {
	set('springCloudVersion', 'Greenwich.SR1')
}

project.group = 'eu.h2020.symbiote'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://jitpack.io" }
}

/*
Forces dependencies' cache invalidation for each build for dependencies marked with
    { changing = true }
    e.g.
    compile('com.github.symbiote-h2020:SymbIoTeLibraries:develop-SNAPSHOT'){ changing = true }
 */
configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	// localMaven
	//compile('eu.h2020.symbiote:ResourceAccessProxyPluginStarter:0.5.0-SNAPSHOT')
	// jitpack
	compile('com.github.symbiote-h2020:ResourceAccessProxyPluginStarter:1.0+')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

// publication
bootJar {
	classifier = 'run'
}

jar {
	baseName = 'RapPluginExample'
	version = project.version
}

task generateJavaDocs(type: Javadoc) {
	source = sourceSets.main.allJava
	classpath = project.sourceSets.main.compileClasspath
	destinationDir = reporting.file("javadocs")
}

task javadocJar(type: Jar, dependsOn: generateJavaDocs) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = project.group
			version = project.version
			from components.java

			artifact sourceJar {
				classifier "sources"
			}

			artifact javadocJar

			artifact(file("$libsDir/$project.name-$project.version-${bootJar.classifier}.jar")) {
				classifier "run"
			}
		}
	}
}

publishToMavenLocal.dependsOn(bootJar)
